{"name":"Dikonsuite","tagline":"","body":"# dikon\r\n\r\n**dikon** is \"DI CONtainer written in Kotlin\".\r\n**dikon** is Japanese \"Daikon\" radish.\r\n\r\nKotlinの勉強を兼ねて、KotlinでDI コンテナを中心としたMVCフレームワークを作っています。\r\n\r\n## 設定\r\nDikonには設定ファイルというもの無く、オブジェクト名をキーにファクトリを割り当てるMapを作り、Dikonのコンストラクタに渡すことで設定します。\r\n\r\nファクトリはインターフェイスと含め、5種類用意しています。\r\n\r\n### Factory\r\nインターフェイスです。\r\n用意されたファクトリではオブジェクトの生成に問題がある場合などには、こちらを利用してください。\r\n\r\n### Create\r\n指定したクラスのインスタンスを作るだけのファクトリです。\r\n\r\n### Injection\r\n指定したクラスのインスタンスを生成する際に、コンストラクタインジェクションを行います。\r\n\r\n### Singleton\r\nファクトリで生成したオブジェクトをシングルトンで提供するファクトリです。\r\n\r\n### Holder\r\n生成済みのオブジェクトを保持するだけで、生成はしません。\r\n\r\n## 今後の予定\r\n\r\n+ [Buri](./buri/README.md)の強化\r\n+ KotlinによるMicro ORM実装？\r\n+ もしくはJPA準拠ORMのKotlin向けラッパーの作成？\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}